services:
  products:
    build:
      context: .
      dockerfile: ./apps/products/Dockerfile
      target: development
    command: npm run start:dev products
    env_file:
      - ./apps/products/.env
    depends_on:
      - postgres
      - feedback
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
    ports:
      - '3000:3000'
  feedback:
    build:
      context: .
      dockerfile: ./apps/feedback/Dockerfile
      target: development
    command: npm run start:dev feedback
    env_file:
      - ./apps/feedback/.env
    depends_on:
      - postgres
      - auth
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  auth:
    build:
      context: .
      dockerfile: ./apps/auth/Dockerfile
      target: development
    command: npm run start:dev auth
    ports:
      - '3001:3001'
    env_file:
      - ./apps/auth/.env
    depends_on:
      - postgres
    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules
  postgres:
    image: postgres:latest
    restart: always
    environment:
      - POSTGRES_USER=ubuntu
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5434:5432"
      - "5432:5432"

volumes:
  postgres: